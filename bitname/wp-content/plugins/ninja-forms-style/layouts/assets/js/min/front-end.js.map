{"version":3,"sources":["../../../config-wrap-start-default.js","../lib/almond.js","views/cellComposite.js","views/rowComposite.js","views/rowCollection.js","models/cellFieldCollection.js","models/cellModel.js","models/cellCollection.js","models/rowModel.js","models/rowCollection.js","controllers/formContentFilters.js","controllers/loadControllers.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","view","Marionette","CompositeView","extend","template","className","getChildView","nfRadio","channel","request","initialize","this","collection","model","get","el","css","onRender","html","attachHtml","collectionView","childView","find","append","cellComposite","onAttach","closest","addClass","rowComposite","CollectionView","tagName","Backbone","Collection","comparator","models","options","cellModel","_","each","set","cid","silent","listenTo","rowModel","validateFields","showFields","hideFields","fieldCollection","formModel","on","resetCollection","fieldModel","trigger","invoke","visible","fieldModels","findWhere","key","reset","CellFieldCollection","Model","search","findField","Number","triggerErrors","CellCollection","RowCollectionView","RowCollection","controller","getFormContentView","formContentLoad","formContentData","empty","fields","formContentLoadFilters","mpEnabled","isArray","first","type","flatten","pluck","rowArray","cells","order","width","isEmpty","nfLayouts","rows","FormContentFilters","Radio","LoadControllers","NFLayouts","Application","loadControllers","app","start"],"mappings":"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","file":"front-end.js","sourcesContent":["(function () {\n","/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","define( 'views/cellComposite',[], function() {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-cell',\n\t\tclassName: 'nf-cell',\n\n\t\tgetChildView: function() {\n\t\t\treturn nfRadio.channel( 'views' ).request( 'get:fieldLayout' );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = this.model.get( 'fields' );\n\t\t\t// Get our fieldItem view.\n\t\t\tjQuery( this.el ).css( 'width', this.model.get( 'width' ) + '%' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( 0 == this.collection.length ) {\n\t\t\t\tjQuery( this.el ).html( '&nbsp;' );\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( 'nf-fields' ).append( childView.el );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/rowComposite',['views/cellComposite'], function( cellComposite ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-row',\n\t\tchildView: cellComposite,\n\t\tclassName: 'nf-row',\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = this.model.get( 'cells' );\n\n\t\t},\n\n\t\tonAttach: function() {\n\t\t\tif ( 1 < this.collection.length ) {\n\t\t\t\tjQuery( this.el ).closest( '.nf-form-wrap' ).addClass( 'nf-multi-cell' );\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( 'nf-cells' ).append( childView.el );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/rowCollection',['views/rowComposite'], function( rowComposite ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: 'nf-rows-wrap',\n\t\tchildView: rowComposite\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Holds all of our cell field models.\n * \n * @package Ninja Forms Layouts\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/cellFieldCollection',[], function( ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\t// We've been passed the cellModel to which this collection belongs.\n\t\t\tthis.cellModel = options.cellModel;\n\t\t\t_.each( models, function( model ) {\n\t\t\t\tmodel.set( 'cellcid', this.cellModel.cid, { silent: true } );\n\t\t\t}, this );\n\n\t\t\tthis.listenTo( this.cellModel.collection.rowModel.collection, 'validate:fields', this.validateFields );\n\t\t\tthis.listenTo( this.cellModel.collection.rowModel.collection, 'show:fields', this.showFields );\n\t\t\tthis.listenTo( this.cellModel.collection.rowModel.collection, 'hide:fields', this.hideFields );\n\t\t\n\t\t\tvar fieldCollection = this.cellModel.collection.formModel.get( 'fields' );\n\n\t\t\t// When we remove a model from our main field collection, make sure it's removed from this collection as well.\n\t\t\tfieldCollection.on( 'reset', this.resetCollection, this );\n\t\t},\n\n\t\tvalidateFields: function() {\n\t\t\t_.each( this.models, function( fieldModel ) {\n\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'validate:field', fieldModel );\n\t\t\t}, this );\n\t\t},\n\n\t\tshowFields: function() {\n\t\t\tthis.invoke( 'set', { visible: true } );\n            this.invoke( function() {\n                this.trigger( 'change:value', this );\n            });\n\t\t},\n\n\t\thideFields: function() {\n\t\t\tthis.invoke( 'set', { visible: false } );\n            this.invoke( function() {\n                this.trigger( 'change:value', this );\n            });\n\t\t},\n\n\t\t/**\n\t\t * When we reset our main field collection, we need to reset any of those fields in this collection.\n\t\t * \n\t\t * @since  3.0.12\n\t\t * @param  Backbone.Collection \t\tcollection\n\t\t * @return void\n\t\t */\n\t\tresetCollection: function( collection ) {\n\t\t\tvar fieldModels = [];\n\t\t\t_.each( this.models, function( fieldModel ) {\n\t\t\t\tif ( 'submit' != fieldModel.get( 'type' ) ) {\n\t\t\t\t\tfieldModels.push( collection.findWhere( { key: fieldModel.get( 'key' ) } ) );\n\t\t\t\t} else {\n\t\t\t\t\tfieldModels.push( fieldModel );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis.reset( fieldModels );\n\t\t}\n\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that holds our cell information\n * \n * @package Ninja Forms Layouts\n * @subpackage Layouts\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/cellModel',['models/cellFieldCollection'], function( CellFieldCollection) {\n\tvar model = Backbone.Model.extend( {\n\t\tinitialize: function() {\n\t\t\tvar fieldCollection = this.collection.formModel.get( 'fields' );\n\t\t\tvar fieldModels = [];\n\t\t\t_.each( this.get( 'fields' ), function( search ) {\n\t\t\t\tif ( 'undefined' == typeof fieldCollection.get( search ) ) {\n\t\t\t\t\tvar findField = fieldCollection.findWhere( { key: search } );\n\t\t\t\t\tif ( 'undefined' != typeof findField ) {\n\t\t\t\t\t\tfieldModels.push( findField );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfieldModels.push( fieldCollection.get( search ) );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} );\n\t\t\tthis.set( 'fields', new CellFieldCollection( fieldModels, { cellModel: this } ) );\n            this.set( 'order', Number( this.get( 'order' ) ) );\n\t\t\tthis.listenTo( this.get( 'fields' ), 'change:errors', this.triggerErrors );\n\t\t},\n\n\t\ttriggerErrors: function( fieldModel ) {\n\t\t\tthis.collection.trigger( 'change:errors', fieldModel );\n\t\t}\n\t\t\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our cell models.\n * \n * @package Ninja Forms Layouts\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/cellCollection',['models/cellModel'], function( cellModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: cellModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.rowModel = options.rowModel;\n\t\t\tthis.formModel = options.formModel;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that holds our row information\n * \n * @package Ninja Forms Layouts\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/rowModel',['models/cellCollection'], function( CellCollection ) {\n\tvar model = Backbone.Model.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.set( 'cells', new CellCollection( this.get( 'cells' ), { rowModel: this, formModel: this.collection.formModel } ) );\n            this.set( 'order', Number( this.get( 'order' ) ) );\n\t\t\tthis.listenTo( this.get( 'cells' ), 'change:errors', this.triggerErrors );\n\t\t},\n\n\t\ttriggerErrors: function( fieldModel ) {\n\t\t\tthis.collection.trigger( 'change:errors', fieldModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our row models.\n * \n * @package Ninja Forms Layouts\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/rowCollection',['models/rowModel'], function( rowModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: rowModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.formModel = options.formModel;\n\t\t},\n\n\t\tvalidateFields: function() {\n\t\t\t/*\n\t\t\t * Validate the fields in this row collection.\n\t\t\t */\n\t\t\tthis.trigger( 'validate:fields', this );\n\t\t},\n\n\t\tshowFields: function() {\n\t\t\tthis.trigger( 'show:fields', this );\n\t\t},\n\n\t\thideFields: function() {\n\t\t\tthis.trigger( 'hide:fields', this );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","define( 'controllers/formContentFilters',[ 'views/rowCollection', 'models/rowCollection'], function( RowCollectionView, RowCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:viewFilter', this.getFormContentView, 4 );\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:loadFilter', this.formContentLoad, 4 );\n\t\t\t\n\t\t\t/*\n\t\t\t * In the RC for Ninja Forms, the 'formContent' channel was called 'fieldContents'.\n\t\t\t * This was changed in version 3.0. These radio messages are here to make sure nothing breaks.\n\t\t\t *\n\t\t\t * TODO: Remove this backwards compatibility radio calls.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fieldContents' ).request( 'add:viewFilter', this.getFormContentView, 4 );\n\t\t\tnfRadio.channel( 'fieldContents' ).request( 'add:loadFilter', this.formContentLoad, 4 );\n\t\t},\n\n\t\tgetFormContentView: function( collection ) {\n\t\t\treturn RowCollectionView;\n\t\t},\n\n\t\t/**\n\t\t * When we load our builder view, we filter the formContentData.\n\t\t * This turns the saved object into a Backbone Collection.\n\t\t *\n\t\t * If we aren't passed any data, then this form hasn't been modified with layouts yet,\n\t\t * so we default to the nfLayouts.rows global variable that is localised for us.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  array formContentData current value of our formContentData.\n\t\t * @return Backbone.Collection\n\t\t */\n\t\tformContentLoad: function( formContentData, formModel, empty, fields ) {\n\t\t\tif ( true === formContentData instanceof RowCollection ) return formContentData;\n\t\t\t\n\t\t\tvar formContentLoadFilters = nfRadio.channel( 'formContent' ).request( 'get:loadFilters' );\n\n\t\t\t/*\n\t\t\t * TODO: This is a bandaid fix to prevent forms with layouts and parts from freaking out of layouts & styles are deactivated.\n\t\t\t * If Layouts is deactivated, it will send the field keys.\n\t\t\t */\n\t\t\tvar mpEnabled = ( 'undefined' != typeof formContentLoadFilters[1] ) ? true : false;\n\n\t\t\t/*\n\t\t\t * TODO: Bandaid fix for making sure that Layouts can interpret Multi-Part data if Multi-Part is disabled.\n\t\t\t */\n\t\t\tif ( ! mpEnabled && _.isArray( formContentData ) && 0 != _.isArray( formContentData ).length  && 'undefined' != typeof _.first( formContentData ) && 'part' == _.first( formContentData ).type ) {\n\t\t\t\t/* \n\t\t\t\t * Get our layout data from inside MP\n\t\t\t\t */\n\t\t\t\tformContentData = _.flatten( _.pluck( formContentData, 'formContentData' ) );\n\t\t\t}\n\n\t\t\tempty = empty || false;\n\t\t\tfields = fields || false;\n\t\t\tvar rowArray = [];\n\n\t\t\tif ( _.isArray( formContentData ) && 0 != formContentData.length && 'undefined' == typeof formContentData[0].cells ) {\n\t\t\t\t_.each( formContentData, function( key, index ) {\n\t\t\t\t\trowArray.push( {\n\t\t\t\t\t\torder: index,\n\t\t\t\t\t\tcells: [ {\n\t\t\t\t\t\t\torder: 0,\n\t\t\t\t\t\t\tfields: [ key ],\n\t\t\t\t\t\t\twidth: '100'\n\t\t\t\t\t\t} ]\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\t\t\t} else if ( _.isEmpty( rowArray ) && 'undefined' != typeof nfLayouts && ! mpEnabled ) {\n\t\t\t\trowArray = nfLayouts.rows;\n\t\t\t} else {\n\t\t\t\trowArray = formContentData;\n\t\t\t}\n\t\t\t\n\t\t\treturn new RowCollection( rowArray, { formModel: formModel } );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define( \n\t'controllers/loadControllers',[\n\t\t'controllers/formContentFilters',\n\t], \n\tfunction\n\t(\n\t\tFormContentFilters\n\t)\n\t{\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnew FormContentFilters();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","var nfRadio = Backbone.Radio;\nrequire( ['controllers/loadControllers'], function( LoadControllers ) {\n\n\tvar NFLayouts = Marionette.Application.extend( {\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'before:filterData', this.loadControllers );\n\t\t},\n\n\t\tloadControllers: function( app ) {\n\t\t\tnew LoadControllers();\n\t\t}\n\t} );\n\n\tvar nfLayouts = new NFLayouts();\n\tnfLayouts.start();\n} );\ndefine(\"main\", function(){});\n\n"]}